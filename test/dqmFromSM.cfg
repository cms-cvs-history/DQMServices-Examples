process test={
    
    untracked PSet maxEvents = {untracked int32 input = -1}

    // SM Event Source
    source = EventStreamHttpReader
    {
        // Change the following line to use a different playback system
	// 1) CERN
        #string sourceURL = "http://cmsmon:50082/urn:xdaq-application:lid=29"
	// 2) FNAL
	#string sourceURL = "http://lhc01n02.fnal.gov:50082/urn:xdaq-application:lid=29"
	// 3) ROC
	string sourceURL = "http://cmsroc9.fnal.gov:50082/urn:xdaq-application:lid=29"
        int32 max_event_size = 7000000
        int32 max_queue_depth = 5

        untracked string consumerName = "Test Consumer"
        untracked string consumerPriority = "normal"
        untracked int32 headerRetryInterval = 3  // seconds
        untracked double maxEventRequestRate = 2.5  // hertz
        untracked PSet SelectEvents = { vstring SelectEvents={"*"} }
    }

    # back-end interface service
    service = DaqMonitorROOTBackEnd{}
    
    # send source _AND_ client histograms out to collector every 5000 events
    service = DQMShipMonitoring{
	// event-period for shipping monitoring to collector (default: 25)
	untracked uint32 period = 5000
    }

    # MonitorDaemon configuration
    # optionally use the following line instead of the ones below
    # include "DQMServices/Examples/test/dqm_monitorDaemon.cfi"
    service = MonitorDaemon{
	untracked string DestinationAddress = "localhost"
	untracked int32 SendPort = 9090
    }

    # DQM Source program 
    # code in DQMServices/Daemon/src/DQMSourceExample.cc
    module dqmSource = DQMSourceExample{	
	# Base name for monitor folders and output file		
	untracked string monitorName = "YourSubsystemName"
	# Operate every N events (default: -1 no prescale)
	untracked int32 prescaleEvt = -1
    }

    # run the quality tests as defined in QualityTests.xml
    module qTester = QualityTester {
	untracked int32 QualityTestPrescaler = 5000
    }

    # DQM Client program
    # code in DQMServices/Examples/src/DQMExampleClient.cc
    # notes:
    module dqmClient = DQMClientExample {
	# Base name for monitor folders and output file		
	// untracked string monitorName = "YourSubsystemName"
	# Operate every N lumi sections
	untracked int32 prescaleLS  = -1
	# Operate every N events
	untracked int32 prescaleEvt  = 1000
    }

    # output into logfiles (verbose)
    service = MessageLogger {
	untracked vstring destinations = { 
	    "detailedInfo" , "critical" , "cout"
	}
	untracked vstring debugModules = { "*" }
	untracked PSet critical     = { untracked string threshold = "ERROR"   }
	untracked PSet detailedInfo = { untracked string threshold = "INFO"    } 
	untracked PSet cout = {
	    untracked string threshold = "WARNING"
	    untracked bool noLineBreaks = true
	    untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }	

    #########################################################
    #### BEGIN DQM Online Environment #######################
    #########################################################

    #### PUT THE FOLLOWING INTO YOUR PATH FOR OPERATION AT P5
    #### REPLACE SubsystemName by the name of your source ###

    # use include file for dqmEnv dqmSaver
       include "DQMServices/Components/test/dqm_onlineEnv.cfi"
       # put your subsystem name here: 
       # DT, Ecal, Hcal, SiStrip, Pixel, RPC, CSC, L1T 
       # (this goes into the filename)
       replace dqmSaver.fileName      = "YourSubsystemName"
       # (this goes into the foldername)
       replace dqmEnv.subSystemFolder = "YourSubsystemName"
       
       # optionally change fileSaving  conditions
       // replace dqmSaver.prescaleLS =   -1
       // replace dqmSaver.prescaleTime = -1 # in minutes
       // replace dqmSaver.prescaleEvt =  -1
       // replace dqmSaver.saveAtRunEnd = true
       // replace dqmSaver.saveAtJobEnd = false
       # will add switch to select histograms to be saved soon
   
    #########################################################
    #### END ################################################
    #########################################################

### FIX YOUR  PATH TO INCLUDE dqmEnv and dqmSaver
    path p ={dqmSource & qTester & dqmClient & dqmEnv & dqmSaver }

} 
