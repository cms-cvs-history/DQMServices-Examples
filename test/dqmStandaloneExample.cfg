process test={
    
    source = EmptySource {
	# Number of events program should run
	untracked int32 maxEvents = 1000000
    }
    
    # back-end interface service
    service = DaqMonitorROOTBackEnd{}
    
    # MonitorDaemon configuration
    include "DQMServices/Daemon/test/data/dqm_monitorDaemon.cfi"
    
    # name of DQM Source program
    module dqmSource = DQMSourceExample{}

    # needed to run the quality tests
    module qTester = QualityTester {
	untracked int32 QualityTestPrescaler = 5000
    }

    # name of DQM Client program
    module dqmClient = MonitorClient {
	untracked string folderRoot = ""
	untracked bool runningStandalone = true
	untracked int32 diagnosticPrescale = 5000	
    }

    service = DQMShipMonitoring{
	// event-period for shipping monitoring to collector (default: 25)
	untracked uint32 period = 500
    }


    service = MessageLogger {
	untracked vstring destinations = { 
	    "detailedInfo" , "critical" , "cout"
	}
	untracked vstring debugModules = { "*" }
	untracked PSet critical     = { untracked string threshold = "ERROR"   }
	untracked PSet detailedInfo = { untracked string threshold = "INFO"    } 
	untracked PSet cout = {
	    untracked string threshold = "WARNING"
	    untracked bool noLineBreaks = true
	    untracked PSet WARNING = {untracked int32 limit = 0 }
	}
    }	

    
    path p ={dqmSource & qTester & dqmClient}

} 
